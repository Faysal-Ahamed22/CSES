ll n,x; 
    cin>>n>>x; 
    vector<ll>coin(n); 
    for(ll i=0; i<n; i++)cin>>coin[i]; 
    vector<vector<ll>>dp(n+1, vector<ll>(x+1)); 
    // base case 
    for(ll i=0; i<n; i++)dp[i][0]=1; 
    for(ll i=n-1; i>=0; i--)
    {
        // traying to find dp[i][sum]; 
        for(ll sum=1; sum<=x; sum++)
        {
           ll skip=dp[i+1][sum]; // skipping ith coin
           ll take=0; 
           if(coin[i]<=sum)
           {
             take=dp[i][sum-coin[i]]; 
           }
           dp[i][sum]=(take+skip)%MOD; 
        }
    }
    cout<<dp[0][x]<<endl;
    return ; 
    
